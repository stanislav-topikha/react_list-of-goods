{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","state","isReverse","sortedBy","lengthLimit","reverseHandler","setState","prev","aplhSortHandler","sortSwitch","lengthSortHandler","resetHandler","selectHandler","event","target","value","currentSort","this","preparedList","props","goods","filter","good","length","sort","g1","g2","localeCompare","reverse","className","type","onClick","name","onChange","defaultValue","Array","from","keys","slice","map","num","React","Component","goodsFromServer","App","listShown","startHandler","ReactDOM","render","document","getElementById"],"mappings":"4OAcaA,EAAb,4MACEC,MAAyB,CACvBC,WAAW,EACXC,SAAU,UACVC,YAAa,GAJjB,EAOEC,eAAiB,WACf,EAAKC,UAAS,SAAAC,GAAI,MAAK,CAAEL,WAAYK,EAAKL,eAR9C,EAWEM,gBAAkB,kBAAM,EAAKC,WAAW,aAX1C,EAaEC,kBAAoB,kBAAM,EAAKD,WAAW,WAb5C,EAeEE,aAAe,WACb,EAAKL,SAAS,CAAEJ,WAAW,EAAOC,SAAU,UAAWC,YAAa,KAhBxE,EAmBEQ,cAAgB,SAACC,GACf,EAAKP,SAAS,CAAEF,aAAcS,EAAMC,OAAOC,SApB/C,gDAuBE,SAAWC,GACTC,KAAKX,UAAS,SAAAC,GACZ,OAAIA,EAAKJ,WAAaa,EACb,CAAEb,SAAU,WAGd,CAAEA,SAAUa,QA7BzB,oBAiCE,WACE,MAA6CC,KAAKhB,MAA1CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,YACvBc,EAAeD,KAAKE,MAAMC,MAC7BC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUnB,KAmBjC,OAjBAc,EAAaM,MAAK,SAACC,EAAIC,GACrB,OAAQvB,GACN,IAAK,WACH,OAAOsB,EAAGE,cAAcD,GAE1B,IAAK,SACH,OAAOD,EAAGF,OAASG,EAAGH,OAExB,QACE,OAAO,MAITrB,GACFgB,EAAaU,UAIb,sBAAKC,UAAU,UAAf,UACE,sBACEA,UAAU,kEADZ,UAQE,wBACEC,KAAK,SACLC,QAASd,KAAKN,aACdkB,UAAU,wBAHZ,mBAOA,wBACEC,KAAK,SACLC,QAASd,KAAKZ,eACdwB,UAAU,uBAHZ,qBAOA,wBACEC,KAAK,SACLC,QAASd,KAAKT,gBACdqB,UAAU,uBAHZ,iCAOA,wBACEC,KAAK,SACLC,QAASd,KAAKP,kBACdmB,UAAU,uBAHZ,4BAQA,gCACE,8CAEA,qBAAKA,UAAU,SAAf,SACE,wBACEd,MAAOX,EACP4B,KAAK,SACLC,SAAUhB,KAAKL,cACfsB,aAAc9B,EAJhB,SAMI+B,MAAMC,KAAKD,MAAM,IAAIE,QAAQC,MAAM,GAAGC,KAAI,SAAAC,GAAG,OAC7C,wBAEEzB,MAAOyB,EAFT,SAIGA,GAHIA,gBAWjB,oBAAIX,UAAU,SAAd,SACGX,EAAaqB,KAAI,SAAAjB,GAAI,OACpB,oBAEEO,UAAU,8BAFZ,SAQGP,GAPIA,eAxHnB,GAA+BmB,IAAMC,WCV/BC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJ3C,MAAQ,CACN4C,WAAW,G,EAGbC,aAAe,kBACb,EAAKxC,UAAS,SAAAC,GAAI,MAAK,CAAEsC,WAAYtC,EAAKsC,e,4CAG5C,WACE,OACE,sBACEhB,UAAU,6BADZ,UAME,oBAAIA,UAAU,+BAAd,mBACCZ,KAAKhB,MAAM4C,UACR,cAAC,EAAD,CAAWzB,MAAOuB,IAElB,wBACEb,KAAK,SACLC,QAASd,KAAK6B,aACdjB,UAAU,kCAHZ,0B,GArBMY,IAAMC,WAkCTE,ICpDfG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c9b1e619.chunk.js","sourcesContent":["import React from 'react';\n\ntype Sort = 'length' | 'alphabet' | 'default';\n\ntype Props = {\n  goods: string[],\n};\n\ntype State = {\n  isReverse: boolean,\n  sortedBy: Sort,\n  lengthLimit: number,\n};\n\nexport class GoodsList extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    isReverse: false,\n    sortedBy: 'default',\n    lengthLimit: 1,\n  };\n\n  reverseHandler = () => {\n    this.setState(prev => ({ isReverse: !prev.isReverse }));\n  };\n\n  aplhSortHandler = () => this.sortSwitch('alphabet');\n\n  lengthSortHandler = () => this.sortSwitch('length');\n\n  resetHandler = () => {\n    this.setState({ isReverse: false, sortedBy: 'default', lengthLimit: 1 });\n  };\n\n  selectHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ lengthLimit: +event.target.value });\n  };\n\n  sortSwitch(currentSort: Sort) {\n    this.setState(prev => {\n      if (prev.sortedBy === currentSort) {\n        return { sortedBy: 'default' };\n      }\n\n      return { sortedBy: currentSort };\n    });\n  }\n\n  render(): React.ReactNode {\n    const { isReverse, sortedBy, lengthLimit } = this.state;\n    const preparedList = this.props.goods\n      .filter(good => good.length >= lengthLimit);\n\n    preparedList.sort((g1, g2) => {\n      switch (sortedBy) {\n        case 'alphabet':\n          return g1.localeCompare(g2);\n\n        case 'length':\n          return g1.length - g2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReverse) {\n      preparedList.reverse();\n    }\n\n    return (\n      <div className=\"columns\">\n        <div\n          className=\"\n            is-flex\n            is-flex-direction-column\n            mr-6\n            column is-4 is-offset-8\n          \"\n        >\n          <button\n            type=\"button\"\n            onClick={this.resetHandler}\n            className=\"button mb-2 is-danger\"\n          >\n            Reset\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.reverseHandler}\n            className=\"button mb-2 is-light\"\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.aplhSortHandler}\n            className=\"button mb-2 is-light\"\n          >\n            Sort alphabetically\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.lengthSortHandler}\n            className=\"button mb-2 is-light\"\n          >\n            Sort by length\n          </button>\n\n          <div>\n            <span>Length &gt;= </span>\n\n            <div className=\"select\">\n              <select\n                value={lengthLimit}\n                name=\"select\"\n                onChange={this.selectHandler}\n                defaultValue={lengthLimit}\n              >\n                { Array.from(Array(11).keys()).slice(1).map(num => (\n                  <option\n                    key={num}\n                    value={num}\n                  >\n                    {num}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <ul className=\"column\">\n          {preparedList.map(good => (\n            <li\n              key={good}\n              className=\"\n                panel-block\n                subtitle\n                is-5\n              \"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  listShown: boolean,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    listShown: false,\n  };\n\n  startHandler = () => (\n    this.setState(prev => ({ listShown: !prev.listShown }))\n  );\n\n  render(): React.ReactNode {\n    return (\n      <div\n        className=\"\n          container\n          is-max-desktop\n        \"\n      >\n        <h1 className=\"title is-1 has-text-centered\">Goods</h1>\n        {this.state.listShown\n          ? <GoodsList goods={goodsFromServer} />\n          : (\n            <button\n              type=\"button\"\n              onClick={this.startHandler}\n              className=\"is-fullwidth button is-success \"\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}